{"version":3,"file":"static/js/278.df086791.chunk.js","mappings":"gOAUe,SAASA,EAAT,GAAkE,IAAxCC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,eAAgBC,EAAS,EAATA,MAErE,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAGA,GAAoCJ,EAAAA,EAAAA,UAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAYH,EAAaR,EAC/BK,EAAgBH,EAAMU,MAAMJ,EAAYG,IACxCJ,EAAaM,KAAKC,KAAKZ,EAAMa,OAASf,MACrC,CAACQ,EAAYR,EAAcE,IAQ9B,OACE,iCAEE,SAAC,IAAD,CACEc,WAAW,MACXC,WAAW,SAAC,MAAD,IACXC,aAXkB,SAACC,GACvB,IAAMC,EAAaD,EAAME,SAAWrB,EAAgBE,EAAMa,OAC1DN,EAAcW,IAUVE,mBAAoB,EACpBhB,UAAWA,EACXiB,eAAe,SAAC,MAAD,IACfC,sBAAuB,KACvBC,mBAAmB,aACnBC,gBAAgB,oBAChBC,sBAAsB,mBACtBC,kBAAkB,sBAGpB,mBAEA,SAAC3B,EAAD,CAAgBG,aAAcA,S,0IC1CrB,SAASyB,IAEpB,OAAgD1B,EAAAA,EAAAA,UAAS,IAAzD,eAAO2B,EAAP,KAAyBC,EAAzB,KAsBA,OApBArB,EAAAA,EAAAA,YAAU,YACNsB,EAAAA,EAAAA,MACKC,MAAK,SAAAC,GACFH,EAAoBG,EAAIC,wBAEjC,KAgBC,gBAAKC,UAAU,OAAf,UACI,UAAC,IAAD,YAEI,gBAAKA,UAAU,aAAf,UACI,mDAGJ,mBAEA,SAAC,IAAD,CAAgBpC,aAAc,IAAKC,eAvB/C,YAAkC,IAAjBG,EAAgB,EAAhBA,aACb,OACI,+BACA,eAAIgC,UAAU,mBAAd,SACKhC,GACGA,EAAaiC,KAAI,SAACC,GAAD,OACb,+BAA0B,SAAC,KAAD,CAAMC,GAAI,YAAYD,EAAKE,UAA3B,SAAuCF,EAAKG,iBAA7DH,EAAKE,mBAiBoCtC,MAAO4B","sources":["components/Pagination.js","pages/AdverseReactionsList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactPaginate from 'react-paginate';\n\nimport { BsArrowLeft, BsArrowRight } from 'react-icons/bs'\n\nimport \"./css/pagination.css\"\n\n// Example items, to simulate fetching from another resources.\n\n\nexport default function PaginatedItems({ itemsPerPage, ItemsComponent, items }) {\n  // We start with an empty list of items.\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage;\n    setCurrentItems(items.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(items.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage, items]);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    const newOffset = (event.selected * itemsPerPage) % items.length;\n    setItemOffset(newOffset);\n  };\n\n  return (\n    <>\n\n      <ReactPaginate\n        breakLabel=\"...\"\n        nextLabel={<BsArrowRight/>}\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={5}\n        pageCount={pageCount}\n        previousLabel={<BsArrowLeft/>}\n        renderOnZeroPageCount={null}\n        containerClassName=\"pagination\"\n        activeClassName=\"pagination-active\"\n        previousLinkClassName=\"pagination-arrow\"\n        nextLinkClassName=\"pagination-arrow\"\n      />\n\n      <br />\n   \n      <ItemsComponent currentItems={currentItems} />\n    </>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\n\nimport PaginatedItems from \"../components/Pagination\";\n\nimport { getAllAdverseReactions } from \"../api/onsides\";\n\nexport default function AdverseReactionsList() {\n\n    const [adverseReactions, setadverseReactions] = useState([])\n\n    useEffect(() => {\n        getAllAdverseReactions()\n            .then(res => {\n                setadverseReactions(res.adverse_reactions);\n            })\n    }, [])\n\n    function Items({ currentItems }) {\n        return (\n            <>\n            <ul className=\"pagination-items\">\n                {currentItems &&\n                    currentItems.map((item) => (\n                        <li key={item.meddra_id}> <Link to={\"/adverse/\"+item.meddra_id}>{item.concept_name}</Link></li>\n                    ))}\n                    </ul>\n            </>\n        );\n    }\n\n    return (\n        <div className=\"body\">\n            <Container>\n\n                <div className=\"home-title\">\n                    <h2> Adverse Reactions </h2>\n                </div>\n\n                <br />\n\n                <PaginatedItems itemsPerPage={100} ItemsComponent={Items} items={adverseReactions} />\n\n\n\n\n            </Container>\n        </div>\n    )\n}"],"names":["PaginatedItems","itemsPerPage","ItemsComponent","items","useState","currentItems","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","useEffect","endOffset","slice","Math","ceil","length","breakLabel","nextLabel","onPageChange","event","newOffset","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","containerClassName","activeClassName","previousLinkClassName","nextLinkClassName","AdverseReactionsList","adverseReactions","setadverseReactions","getAllAdverseReactions","then","res","adverse_reactions","className","map","item","to","meddra_id","concept_name"],"sourceRoot":""}